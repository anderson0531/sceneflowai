'use client';

import { useGuideStore } from '@/store/useGuideStore';
import { useAIContextStore } from '@/store/useAIContextStore';
import { Button } from '@/components/ui/Button';
import { SparklesIcon } from 'lucide-react';
import { useState, useEffect } from 'react';

// Simple textarea-based editor for now to avoid Tiptap issues
export function TreatmentTab() {
  const { guide, updateTreatment } = useGuideStore();
  const setAIContext = useAIContextStore((state) => state.setContext);
  const [content, setContent] = useState(guide.filmTreatment);
  const [isClient, setIsClient] = useState(false);

  // Ensure component is mounted before rendering
  useEffect(() => {
    setIsClient(true);
  }, []);

  // Handle content updates
  const handleContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
    const newContent = e.target.value;
    setContent(newContent);
    updateTreatment(newContent);
  };

  const handleAIRefine = () => {
    const textarea = document.querySelector('textarea');
    if (textarea) {
      const selectedText = textarea.value.substring(textarea.selectionStart, textarea.selectionEnd);
      if (selectedText) {
        setAIContext(`Refine this section of the treatment: "${selectedText}"`, true);
      }
    }
  };

  // Don't render until client-side
  if (!isClient) {
    return (
      <div className="py-3 sm:py-6 flex justify-center">
        <div className="w-full max-w-4xl bg-white p-4 sm:p-6 lg:p-10 shadow-2xl rounded-lg min-h-[60vh] sm:min-h-[80vh] flex items-center justify-center">
          <div className="text-gray-500">Loading editor...</div>
        </div>
      </div>
    );
  }

  return (
    <div className="py-3 sm:py-6 flex justify-center">
      {/* Document Container */}
      <div className="w-full max-w-4xl bg-white p-4 sm:p-6 lg:p-10 shadow-2xl rounded-lg min-h-[60vh] sm:min-h-[80vh]">
        <div className="mb-4">
          <Button onClick={handleAIRefine} size="sm" variant="default" className="shadow-md">
            <SparklesIcon className="w-4 h-4 mr-2"/> Refine with AI
          </Button>
        </div>
        <textarea
          value={content}
          onChange={handleContentChange}
          className="w-full h-full min-h-[400px] p-4 prose prose-sm sm:prose-base lg:prose-lg focus:outline-none leading-relaxed text-gray-900 resize-none"
          placeholder="Write your film treatment here..."
        />
      </div>
    </div>
  );
}
